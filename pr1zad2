include("residue.jl")

Написать функцию, реализующую расширенный алгоритм Евклида, вычисляющий не только НОД, но и коэффициенты его линейного представления.

Скажем что d=НОД(a, b), тогда существуют такие целые коэффициенты u, v, что d=u*a+v*b

Мы спроектируем расширенный алгоритм Евклида с помощью инварианта цикла, и тем самым будет доказано это утверждение.

Напомним, что инвариантом цикла (с передусловием) называется некотрое утверждение относительно переменных, изменяющихся в цикле, которое справедливо как перед началом выполнения цикла, так и после любого числа его повторений.

В данном случае в качестве инварианта цикла возьмём утверждение 

function gcdx_(a::T,b::T)::Tuple{T,T,T} where T
#= таблицы из дискретной математики
	[	a	b	]
	[	u	v	]
	[	u_	v_	]
=#
	a,b = max(a,b),min(a,b)
	u,v = 1,0
	u_,v_ = 0,1

	while b > 0
		k = div(a,b);
		a,b = b,a - k * b
		u,v = v,u - k * v
		u_,v_ = v_,u_ - k * v_
	end

	s = sign(a)

	return (
		a * s ,
		u * s ,
		u_ * s
	)
end
